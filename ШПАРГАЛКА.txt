═══════════════════════════════════════════════════════════
            АИС - СИСТЕМА РАСПРЕДЕЛЕНИЯ ЗАЯВОК
              ШПАРГАЛКА ДЛЯ БЫСТРОГО ЗАПУСКА
═══════════════════════════════════════════════════════════

🐳 ЗАПУСК ЧЕРЕЗ DOCKER (РЕКОМЕНДУЕТСЯ)
═══════════════════════════════════════════════════════════

  1. Двойной клик: docker_init.bat       (первый раз)
  2. Двойной клик: docker_start.bat      (каждый раз)
  3. Открыть: http://localhost:8501


📁 BAT-ФАЙЛЫ ДЛЯ УПРАВЛЕНИЯ
═══════════════════════════════════════════════════════════

  docker_init.bat   → Инициализация (10 исполнителей)
  docker_start.bat  → Запуск системы
  docker_stop.bat   → Остановка
  docker_reset.bat  → Полный сброс для новой демонстрации


📚 ДОКУМЕНТАЦИЯ
═══════════════════════════════════════════════════════════

  START_DOCKER.md      ⭐ Быстрый старт (главная инструкция)
  README_FINAL.md      → Итоговая сводка
  DEMO_GUIDE.md        → Сценарии демонстрации
  DOCKER_ЗАПУСК.md     → Детали работы с Docker


🎭 ДЕМОНСТРАЦИЯ (5 МИНУТ)
═══════════════════════════════════════════════════════════

  Минута 1: Раздел "⚖️ Распределение"
    → Показать пустую систему
    → Объяснить MAE метрику

  Минуты 2-3: Раздел "🧪 Нагрузочное тестирование"
    → Заявок: 1000
    → Батч: 50
    → Задержка: 50 мс
    → Нажать "🚀 Запустить"

  Минуты 4-5: Раздел "⚖️ Распределение"
    → MAE < 0.05 (отлично!)
    → График утилизации
    → Таблица распределения


📊 МЕТРИКИ
═══════════════════════════════════════════════════════════

  MAE (справедливость):
    < 0.05    → Отлично ✅✅✅
    0.05-0.15 → Хорошо ✅
    > 0.15    → Нужна оптимизация ⚠️

  Утилизация:
    0-70%   → 🟢 Зеленый (норма)
    70-90%  → 🟡 Желтый (высокая)
    90-100% → 🔴 Красный (критическая)


🔧 КОМАНДЫ DOCKER
═══════════════════════════════════════════════════════════

  docker-compose up              → Запуск
  docker-compose stop            → Остановка
  docker-compose logs -f ais     → Просмотр логов
  docker-compose down            → Полная остановка


💡 ЧТО ГОВОРИТЬ
═══════════════════════════════════════════════════════════

  О справедливости (MAE):
    "MAE показывает насколько равномерно распределена
    нагрузка. У нас MAE < 0.05, что означает отличное
    распределение - все исполнители загружены одинаково."

  О производительности:
    "Система обработала 1000 заявок за 2-3 секунды,
    это около 500 заявок в секунду. При этом
    справедливость не пострадала."

  Об утилизации:
    "На графике видно, что все в зеленой зоне.
    Никто не перегружен, но и простоя нет.
    Это оптимальное распределение."


🐛 ПРОБЛЕМЫ И РЕШЕНИЯ
═══════════════════════════════════════════════════════════

  Порт 8501 занят:
    → docker-compose down
    → docker-compose up

  Нет исполнителей:
    → docker_init.bat

  Изменения не применяются:
    → docker-compose build --no-cache
    → docker-compose up

  БД не создана:
    → docker-compose run --rm ais python scripts/init_demo_data.py


✅ CHECKLIST ПЕРЕД ДЕМОНСТРАЦИЕЙ
═══════════════════════════════════════════════════════════

  [ ] Docker Desktop запущен
  [ ] Выполнен docker_init.bat (первый раз)
  [ ] Выполнен docker_start.bat
  [ ] Открыт http://localhost:8501
  [ ] Видно 10 исполнителей на дашборде


🎯 ГЛАВНОЕ
═══════════════════════════════════════════════════════════

  ✅ Все работает через Docker
  ✅ Все зависимости в requirements.txt
  ✅ БД сохраняется локально (streamlit_app/ais.db)
  ✅ Фокус на распределении под нагрузкой
  ✅ Русский интерфейс
  ✅ Real-time обновление (каждые 2 сек)


🚀 БЫСТРЫЙ СТАРТ ПРЯМО СЕЙЧАС
═══════════════════════════════════════════════════════════

  1. Запустить Docker Desktop
  2. Двойной клик: docker_init.bat
  3. Двойной клик: docker_start.bat
  4. Открыть: http://localhost:8501
  5. Демонстрировать!


═══════════════════════════════════════════════════════════
              ВСЁ ГОТОВО К ДЕМОНСТРАЦИИ! 🎉
═══════════════════════════════════════════════════════════

