# –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API Executor Balancer
$BaseUrl = "http://localhost:5678/webhook"

Write-Host "üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API Executor Balancer" -ForegroundColor Yellow
Write-Host "================================================"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
function Test-Result {
    param(
        [string]$TestName,
        [string]$Response,
        [string]$ExpectedStatus
    )
    
    if ($Response -match $ExpectedStatus) {
        Write-Host "‚úÖ $TestName - –£–°–ü–ï–®–ù–û" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $TestName - –û–®–ò–ë–ö–ê" -ForegroundColor Red
        Write-Host "–û—Ç–≤–µ—Ç: $Response"
    }
    Write-Host ""
}

# 1. –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
Write-Host "1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã" -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "$BaseUrl/health" -Method GET
    Test-Result "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è" ($response | ConvertTo-Json) "status"
} catch {
    Write-Host "‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è - –û–®–ò–ë–ö–ê: $($_.Exception.Message)" -ForegroundColor Red
}

# 2. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
Write-Host "2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏" -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "$BaseUrl/stats" -Method GET
    Test-Result "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏" ($response | ConvertTo-Json) "totalOrders"
} catch {
    Write-Host "‚ùå –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ - –û–®–ò–ë–ö–ê: $($_.Exception.Message)" -ForegroundColor Red
}

# 3. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
Write-Host "3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞" -ForegroundColor Yellow
$orderData = @{
    orderId = "TEST-001"
    customerId = "CUST-123"
    description = "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑"
} | ConvertTo-Json

try {
    $response = Invoke-RestMethod -Uri "$BaseUrl/new-order" -Method POST -Body $orderData -ContentType "application/json"
    Test-Result "–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞" ($response | ConvertTo-Json) "success"
} catch {
    Write-Host "‚ùå –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ - –û–®–ò–ë–ö–ê: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "================================================" -ForegroundColor Yellow
Write-Host "üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" -ForegroundColor Green
Write-Host ""
Write-Host "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ n8n:"
Write-Host "docker logs n8n"
Write-Host ""
Write-Host "–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ n8n:"
Write-Host "http://localhost:5678 (admin/admin123)"
